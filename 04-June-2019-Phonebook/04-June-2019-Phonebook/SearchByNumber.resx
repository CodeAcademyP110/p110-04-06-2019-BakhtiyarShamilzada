<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yMjISG/16vU/z0QnwtvI9HMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yMjISG/16vU/z0QnwtvI9HMAAAAASUVORK5CYII=
</value>
  </data>
</root>